openapi: "3.1.0"
info:
  title: "labfastorder API"
  description: "labfastorder API"
  version: "1.0.0"
servers:
  - url: "localhost:8080"
paths:
  /api/productCategories:
    get:
      summary: "GET api/productCategories"
      operationId: "getAllProductCategories"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProductCategoryDTO"
    post:
      summary: "POST api/productCategories"
      operationId: "createProductCategory"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProductCategoryDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductCategoryDTO"
  /api/productCategories/{id}:
    get:
      summary: "GET api/productCategories/{id}"
      operationId: "getProductCategoryById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductCategoryDTO"
    put:
      summary: "PUT api/productCategories/{id}"
      operationId: "updateProductCategory"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProductCategoryDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductCategoryDTO"
    delete:
      summary: "DELETE api/productCategories/{id}"
      operationId: "deleteProductCategory"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/orderDetails:
    get:
      summary: "GET api/orderDetails"
      operationId: "getAllOrderDetails"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/OrderDetailDTO"
  /api/orderDetails/{id}:
    get:
      summary: "GET api/orderDetails/{id}"
      operationId: "getOrderDetailById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDetailDTO"
  /api/tables:
    get:
      summary: "GET api/tables"
      operationId: "getAllTables"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Tables"
    post:
      summary: "POST api/tables"
      operationId: "createTable"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTableDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Tables"
  /api/tables/{id}:
    get:
      summary: "GET api/tables/{id}"
      operationId: "getTableById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Tables"
    put:
      summary: "PUT api/tables/{id}"
      operationId: "updateTable"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTableDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Tables"
    delete:
      summary: "DELETE api/tables/{id}"
      operationId: "deleteTables"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/products:
    get:
      summary: "GET api/products"
      operationId: "getAllProducts"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProductDTO"
    post:
      summary: "POST api/products"
      operationId: "createProduct"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProductDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
  /api/products/{id}:
    get:
      summary: "GET api/products/{id}"
      operationId: "getProductById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
    put:
      summary: "PUT api/products/{id}"
      operationId: "updateProduct"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProductDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
    delete:
      summary: "DELETE api/products/{id}"
      operationId: "deleteProduct"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/orders:
    get:
      summary: "GET api/orders"
      operationId: "getAllOrders"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/OrderDTO"
    post:
      summary: "POST api/orders"
      operationId: "createOrder"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                orderDetails:
                  type: "array"
                  items:
                      properties:
                        quantity:
                          type: "integer"
                          format: "int32"
                        product:
                          type: "object"
                          properties:
                            productId:
                              type: "integer"
                              format: "int64"
                tableId:
                  type: "integer"
                  format: "int64"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
  /api/orders/open:
    get:
      summary: "GET api/orders/open"
      operationId: "getAllOpenOrders"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/OrderDTO"
  /api/orders/{id}:
    get:
      summary: "GET api/orders/{id}"
      operationId: "getOrderById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
    delete:
      summary: "DELETE api/orders/{id}"
      operationId: "deleteOrder"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/orders/{id}/status:
    patch:
      summary: "PATCH api/orders/{id}/status"
      operationId: "updateOrderStatus"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
  /api/test/all:
    get:
      summary: "GET api/test/all"
      operationId: "allAccess"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
components:
  schemas:
    ProductCategoryDTO:
      type: "object"
      properties:
        categoryId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        productsId:
          type: "array"
          items:
            type: "integer"
            format: "int64"
    NewProductCategoryDTO:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
    OrderDetailDTO:
      type: "object"
      properties:
        orderDetailId:
          type: "integer"
          format: "int64"
        quantity:
          type: "integer"
          format: "int32"
        price:
          type: "number"
          format: "double"
        productId:
          type: "integer"
          format: "int64"
        productName:
          type: "string"
    Tables:
      type: "object"
      properties:
        tableId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        sizex:
          type: "integer"
          format: "int32"
        sizey:
          type: "integer"
          format: "int32"
        locx:
          type: "integer"
          format: "int32"
        locy:
          type: "integer"
          format: "int32"
    NewTableDTO:
      type: "object"
      properties:
        name:
          type: "string"
        sizex:
          type: "integer"
          format: "int32"
        sizey:
          type: "integer"
          format: "int32"
        locx:
          type: "integer"
          format: "int32"
        locy:
          type: "integer"
          format: "int32"
    ProductDTO:
      type: "object"
      properties:
        productId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        price:
          type: "number"
          format: "double"
        imgName:
          type: "string"
        available:
          type: "boolean"
        quantity:
          type: "integer"
          format: "int32"
        categoryId:
          type: "integer"
          format: "int64"
        size:
          type: "string"
    NewProductDTO:
      type: "object"
      properties:
        name:
          type: "string"
        price:
          type: "number"
          format: "double"
        imgName:
          type: "string"
        quantity:
          type: "integer"
          format: "int32"
        productCategoryId:
          type: "integer"
          format: "int64"
        size:
          type: "string"
    OrderDTO:
      type: "object"
      properties:
        orderId:
          type: "integer"
          format: "int64"
        status:
          type: "string"
        datetime:
          type: "string"
        totalPrice:
          type: "number"
          format: "double"
        orderDetails:
          type: "array"
          items:
            $ref: "#/components/schemas/OrderDetailDTO"
        tableId:
          type: "integer"
          format: "int64"
    Product:
      type: "object"
      properties:
        productId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        price:
          type: "number"
          format: "double"
        imgName:
          type: "string"
        quantity:
          type: "integer"
          format: "int32"
        available:
          type: "boolean"
        sizes:
          type: "string"
        orderDetails:
          type: "array"
          items:
            $ref: "#/components/schemas/OrderDetail"
    OrderDetail:
      type: "object"
      properties:
        quantity:
          type: "integer"
          format: "int32"
        product:
          $ref: "#/components/schemas/Product"
    NewOrderDTO:
      type: "object"
      properties:
        orderDetails:
          type: "array"
          items:
            $ref: "#/components/schemas/OrderDetail"
        tableId:
          type: "integer"
          format: "int64"